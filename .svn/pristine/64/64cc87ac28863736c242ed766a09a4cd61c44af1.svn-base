<?php

namespace common\models;

use Yii;

/**
 * This is the model class for table "tag_event".
 * @property integer $id
 * @property integer $name
 * @property integer $created_at
 * @property integer $updated_at
 * @property integer $popularity
 */
class Tag extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'tag';
    }

    /**
     * Приивязывает теги к элементам
     * @param Event| $obj Связывает данные модели в БД с тегом, зависит от класса переданной модели
     * @param array $tags
     * @return int
     * @throws \Exception
     * @throws \yii\db\Exception
     */
    public static function bind($obj, array $tags)
    {
        /**
         * @var \common\models\Tag[] $existsTag
         */
        $tags = array_filter($tags,function($item){
           return preg_match('/^[a-z_а-яЁ]{2,25}$/iu',$item);
        });
        if(empty($tags))
            return false;
        $existsTag = static::find()->where(['name' => $tags])->indexBy('name')->all();
        if ($obj instanceof Event) {
            $updatedTag = [];
            $rows       = [];
            //сначала записываем существующие теги
            foreach ($existsTag as $ex) {
                $updatedTag[] = $ex->id;
                unset($tags[array_search($ex->name, $tags)]);
                $rows[] = [$ex->id, $obj->id];
            }
            foreach ($tags as $tag) {
                $model = new static([
                    'name' => $tag
                ]);
                $model->insert();
                if ($model->id) {
                    $rows[] = [$model->id, $obj->id,];
                }
            }
            if (!empty($updatedTag))
                Yii::$app->db->createCommand('UPDATE tag SET popularity=popularity+1 WHERE id IN ('.implode(',', $updatedTag).')')->execute();
            return Yii::$app->db->createCommand()->batchInsert(TagEvent::tableName(), [
                'tag_id',
                'event_id'
            ], $rows)->execute();
        }
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
//        return [
//            'id' => 'Tag Event ID',
//            'id' => 'Tag ID',
//            'id' => 'Event ID',
//        ];
    }
}
